name: 'Setup Inviwo'
description: 'Sets up Inviwo with the recommended set of dependencies'
inputs:
  build-type:
    description: "Build Type of Inviwo (Release, Debug)"
    required: true
    default: 'Release'
  cmake-flags:
    description: 'Additional CMake flags'
    required: false
    default: ''
  cmake-generator:
    description: 'CMake Generator to be used'
    required: true
  os-triplet:
    description: 'Descriptor of the OS to build for'
    required: true
runs:
  using: "composite"
  steps:
    - uses: lukka/get-cmake@latest

    - name: 'Setup VCPKG (cached)'
        id: runvcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgJsonGlob: '${{ github.workspace }}/inviwo/vcpkg.json'

    - name: "log run-vcpkg"
      shell: bash
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

    - name: Setup Dependencies (OS specific)
      uses: knicknic/os-specific-run@v1
      with:
        macos: |
          brew install ninja doxygen
          brew install --cask basictex
          eval "$(/usr/libexec/path_helper)"
          echo "$(dirname $(which latex))" >> $GITHUB_PATH
        linux: |
          sudo apt-get update
          sudo apt-get install -y libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev libglew-dev ninja-build doxygen-latex
        windows: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop bucket add extras
          scoop install nsis doxygen latex
          echo "~/scoop/shims" >> $GITHUB_PATH
          echo "$(Split-Path -Path (Get-Command dvips).Path -Parent)" >> $GITHUB_PATH

    - name: Install Numpy
      shell: bash
      run: pip3 install numpy

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.0
        dir: ${{ github.workspace }}

    - uses: actions/checkout@v2
      with:
        repository: xeTaiz/inviwo-marketplace
        path: inviwo
        submodules: recursive

    - name: Run CMake to install the dependencies specified in the vcpkg.json manifest and generate project file
      uses: lukka/run-cmake@v10
      with:
         cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
         cmakeListsTxtPath: '${{ github.workspace }}/inviwo/CMakeLists.txt'
         buildDirectory:    '${{ github.workspace }}/build'
         configurePreset:   'actions-${{ inputs.os-triplet }}'
         buildPreset:       'actions-${{ inputs.os-triplet }}'
         # This input tells run-cmake to consume the vcpkg.cmake toolchain file set by run-vcpkg.
         useVcpkgToolchainFile: true
         cmakeAppendedArgs: >
           -S inviwo
           -DVCPKG_TARGET_TRIPLET='${{ inputs.os-triplet }}'
           -DCMAKE_BUILD_TYPE=${{ inputs.build-type }}
           -DIVW_CFG_CMAKE_DEBUG=ON
           ${{ inputs.cmake-flags }}
         buildWithCMake: false

    - name: Setup C++
      uses: Trass3r/setup-cpp@v1
